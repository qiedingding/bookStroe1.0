/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.footprint.lx.struts.action;


import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.logging.SimpleFormatter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.omg.CORBA.INTF_REPOS;

import com.footprint.dao.IOrderDetailDao;
import com.footprint.dao.IOrderMainDao;
import com.footprint.dao.entity.orderDetail;
import com.footprint.dao.entity.orderMain;
import com.footprint.dao.entity.user_a;
import com.footprint.dao.impl.OrderDetailDAODbimpl;
import com.footprint.dao.impl.OrderMainDAODbimpl;
import com.footprint.lx.struts.gwc.bookItem;
import com.footprint.lx.struts.gwc.gwc;

public class GwcAction extends DispatchAction {
	public	ActionForward addBook(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String bookId = request.getParameter("bookId");
		HttpSession session = request.getSession();

		if(session.getAttribute("gwc")!=null){
			gwc gwc = (gwc)session.getAttribute("gwc");
			gwc.addBookItem(bookId);
			System.out.println(gwc+"session 里有购物车的数据");
			session.setAttribute("gwc", gwc);
		}else{
			gwc gwc = new gwc();
			System.out.println(gwc+"session 没有购物车的数据");
			gwc.addBookItem(bookId);
			session.setAttribute("gwc", gwc);
			}
		request.setAttribute("msg", "添加到购物车成功");
		request.setAttribute("returnPath", "initIndex.do");
		return mapping.findForward("ok");
		
	}	
	public	ActionForward changeNum(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		int n = Integer.parseInt(request.getParameter("n"));
		String id = request.getParameter("id");
		gwc gwc = (gwc)session.getAttribute("gwc");
		gwc.update(id, n);
		return mapping.findForward("goGwc");
		
	}	
	public	ActionForward clear(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		session.removeAttribute("gwc");
		request.setAttribute("msg", "清空购物车成功");
		request.setAttribute("returnPath", "initIndex.do");
		return mapping.findForward("ok");
		
	}	
	public	ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		gwc gwc = (gwc) session.getAttribute("gwc");
		gwc.delete(Integer.parseInt(request.getParameter("id")));
		request.setAttribute("msg", "清空购物车成功");
		return mapping.findForward("goGwc");
		
	}	
	public	ActionForward order(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		gwc gwc = (gwc) session.getAttribute("gwc");
		user_a user = (user_a) session.getAttribute("user");
		int shtel =Integer.parseInt( request.getParameter("shtel"));
		String shadd = request.getParameter("shadd");
		String shname = request.getParameter("shname");
		String context = request.getParameter("context");
		int uid = user.getCustomerId();
		int sumprice = gwc.getSumPirce();
		DateFormat farmat = new SimpleDateFormat("MMddHHmmss");
		String aa =farmat.format(new Date());
		int oid = Integer.parseInt(aa);
		IOrderDetailDao orderDetailDAO = new OrderDetailDAODbimpl();
		IOrderMainDao orderMainDAO = new OrderMainDAODbimpl();
		orderMain orderMain = new orderMain(oid, uid, sumprice, shtel, shadd, shname, context, 0);
		Collection<bookItem> orders = gwc.getBookItems().values();
		System.out.println(orders);
		for (bookItem bookItem : orders) {
			orderDetail orderDetail = new orderDetail(oid, Integer.parseInt(bookItem.getBookId()), bookItem.getBookName(), bookItem.getNum(),bookItem.getPrice());
			try {
				orderDetailDAO.addOrder(orderDetail);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		try {
			orderMainDAO.addOrder(orderMain);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		session.removeAttribute("gwc");
		request.setAttribute("msg", "购买商品成功");
		return mapping.findForward("ok");
		
	}	
}